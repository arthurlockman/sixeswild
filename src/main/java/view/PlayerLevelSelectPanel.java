package view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import model.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * PlayerLevelSelectPanel Class.
 * Manages the contents and behavior of PlayerLevelSelectPanels.
 *
 * @author ...
 */
public class PlayerLevelSelectPanel
{
    private JPanel playerLevelSelectPanel;
    private JButton backButton;
    private JLabel titleLabel;
    private JPanel menuBarPanel;
    private JScrollPane levelListScrollPane;
    private JList levelList;
    private JButton playButton;

    private DefaultListModel<Level> levelListModel;

    /**
     * PlayerLevelSelectPanel Constructor.
     */
    public PlayerLevelSelectPanel()
    {
        $$$setupUI$$$();
        backButton.addMouseListener(new MouseAdapter()
        {
            public void mouseReleased(MouseEvent e)
            {
                super.mouseReleased(e);
                JPanel parent = (JPanel) playerLevelSelectPanel.getParent();
                CardLayout layout = (CardLayout) parent.getLayout();
                layout.show(parent, "menuPanel");
                JFrame topLevelFrame = (JFrame) SwingUtilities.getAncestorOfClass(JFrame.class, playerLevelSelectPanel);
                topLevelFrame.setLocationRelativeTo(null);
            }
        });

        levelListModel = new DefaultListModel<Level>();
        levelList.setModel(levelListModel);
        levelList.setCellRenderer(new PlayerLevelCellRenderer());
        levelList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * Updates the Level List
     * @param g: the Game
     */
    public void updateLevelList(Game g)
    {
        levelListModel = new DefaultListModel<Level>();
        for (Level l : g.getLevels())
        {
            levelListModel.addElement(l);
        }
        levelList.setModel(levelListModel);
        levelList.setSelectedIndex(0);
    }

    /** Returns the Play Button */
    public JButton getPlayButton()
    {
        return playButton;
    }

    public JPanel getPlayerLevelSelectPanel()
    {
        return playerLevelSelectPanel;
    }

    public JButton getBackButton()
    {
        return backButton;
    }

    public JLabel getTitleLabel()
    {
        return titleLabel;
    }

    public JPanel getMenuBarPanel()
    {
        return menuBarPanel;
    }

    public JScrollPane getLevelListScrollPane()
    {
        return levelListScrollPane;
    }

    public JList getLevelList()
    {
        return levelList;
    }

    public DefaultListModel<Level> getLevelListModel()
    {
        return levelListModel;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        playerLevelSelectPanel = new JPanel();
        playerLevelSelectPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        menuBarPanel = new JPanel();
        menuBarPanel.setLayout(new GridLayoutManager(1, 5, new Insets(0, 0, 0, 0), -1, -1));
        menuBarPanel.setBackground(new Color(-3167898));
        playerLevelSelectPanel.add(menuBarPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        menuBarPanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        titleLabel = new JLabel();
        titleLabel.setText("Select Level");
        menuBarPanel.add(titleLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        menuBarPanel.add(spacer2, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 10, 0, 0), -1, -1));
        panel1.setOpaque(false);
        menuBarPanel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        backButton = new JButton();
        backButton.setText("Back");
        panel1.add(backButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 10), -1, -1));
        panel2.setOpaque(false);
        menuBarPanel.add(panel2, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        playButton = new JButton();
        playButton.setHorizontalTextPosition(2);
        playButton.setText("Play");
        panel2.add(playButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        levelListScrollPane = new JScrollPane();
        playerLevelSelectPanel.add(levelListScrollPane, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        levelList = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        levelList.setModel(defaultListModel1);
        levelListScrollPane.setViewportView(levelList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return playerLevelSelectPanel;
    }
}
